@using Shop

<div class="content">
    <div class="ProductInfo grid">
        <div>
            <img class="ProductInfo__img" src="/images/products/@ViewBag.MainProduct.ImageUrl" alt="Product Image">
        </div>
        <div class="ProductInfo__detail">
            <div class="ProductInfo__detail-name">
                <h3 class="ProductInfo__detail-heading">Tên sản phẩm </h3>
                @ViewBag.MainProduct.ProductName
            </div>
            <div class="ProductInfo__detail-description">
                <h3 class="ProductInfo__detail-heading">Mô tả</h3>
                @ViewBag.MainProduct.Description
            </div>

            @if(ViewBag.MainProduct.Price != ViewBag.MainProduct.DiscountPrice){
                float discountPercent = (ViewBag.MainProduct.Price - ViewBag.MainProduct.DiscountPrice) / (ViewBag.MainProduct.Price/100);
                <h3 class="ProductInfo__detail-heading">Khuyến mãi: @discountPercent%</h3>
            }
            <div class="ProductInfo__detail-price">
            <h3 class="ProductInfo__detail-heading">Giá sản phẩm: </h3>
                <div class="ProductInfo__detail-priceNew">
                    @Shop.Helper.normalizePrice(ViewBag.MainProduct.DiscountPrice.ToString())₫
                </div>
                @if(ViewBag.MainProduct.Price != ViewBag.MainProduct.DiscountPrice){
                    <div class="ProductInfo__detail-priceOld">
                        @Shop.Helper.normalizePrice(ViewBag.MainProduct.Price.ToString())₫
                    </div>
                }
            </div>
            <div class="ProductInfo__AddToCart">
                <div class="ProductInfo__AddToCartbtn">
                    Thêm vào giỏ hàng
                </div>
            </div>
        </div>
    </div>
    <div class="SameProductHeader">------ CÁC SẢN PHẨM TƯƠNG TỰ -----</div>
    <div class="grid">
        <div class="grid__full-width">
            <div class="grid__row">
                
            </div>
            <div class="pagination">
                <div class="pagination__loadMoreBtn">Tải thêm</div>
            </div>
        </div>
    </div>
</div>

<script>
    var productInSameCategoryField = document.querySelector('.grid__row') 
    var loadMoreBtn = document.querySelector('.pagination__loadMoreBtn')
    var productList = @Html.Raw(Json.Serialize(@ViewBag.Products))
    var page = 1

    function QueryAddToCartBtns_AndAddListener_ForThem(){
        @* Handling when user click on button Add to cart at some productItem in productList  *@
        let addToCartBtns = document.querySelectorAll('.productList__item-addToCartbtn')
        for(let i = 0; i<addToCartBtns.length; i++){
            addToCartBtns[i].addEventListener('click', function(e){
                e.stopPropagation()
                if(@Html.Raw(Json.Serialize(@User.Identity.IsAuthenticated)) == false){
                    MakeUserLogin()
                }
                else{
                    let productId = addToCartBtns[i].querySelector('.hiddenProductId').value;
                    let request = new XMLHttpRequest();
                    request.open("POST", `/cart/add/${productId}`, true)
                    request.onreadystatechange = function() {
                        if (this.readyState == 4 && this.status == 200) {
                            toast({
                                title: 'Thành công',
                                message: 'Thêm sản phẩm vào giỏ hàng thành công',
                                type: 'success',
                                duration: 3000
                            })
                            @* alert("Thêm sản phẩm vào giỏ hàng thành công") *@
                            document.querySelector('.barWithSearch__cart-numofProd').textContent = this.responseText
                        }
                    }
                    request.send()
                }
            })
        }
    }

    function LoadProductInSameCategory(){
        for(let i = (page - 1)*10, h = 0; h <10; h++,i++){   
            productInSameCategoryField.innerHTML += GenerateHTMLForProductItem(productList, i)
            if(i == productList.length - 1){
                loadMoreBtn.remove()
                break
            }
        } 
        QueryAddToCartBtns_AndAddListener_ForThem()
        QueryProductItems_AndAddClickListener_ForThem()
    }

    LoadProductInSameCategory()

    @* Check if user is logged in or not, if not, make them login to continue proceed  *@
    addtocartBtn = document.querySelector('.ProductInfo__AddToCartbtn')
    addtocartBtn.addEventListener('click', function(e){
        if(@Html.Raw(Json.Serialize(@User.Identity.IsAuthenticated)) == false){
            MakeUserLogin()
        }
        if(@Html.Raw(Json.Serialize(@User.Identity.IsAuthenticated)) == true){
            let productId = @Html.Raw(Json.Serialize(@ViewBag.MainProduct.ProductId))
            let request = new XMLHttpRequest();
            request.open("POST", `/cart/add/${productId}`, true)
            request.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    toast({
                        title: 'Thành công',
                        message: 'Thêm sản phẩm vào giỏ hàng thành công',
                        type: 'success',
                        duration: 3000
                    })
                    @* alert("Thêm sản phẩm vào giỏ hàng thành công") *@
                    document.querySelector('.barWithSearch__cart-numofProd').textContent = this.responseText
                }
            }
            request.send()
        }
    })

    @* Handling when user click on LoadMore button  *@
    loadMoreBtn.addEventListener('click', function(e){
        page = page + 1
        LoadProductInSameCategory()
    })
</script>


