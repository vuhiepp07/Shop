@functions{
    public string normalizePrice(string price){
        for(int i = price.Length -1, x = 0 ; i> 0; i--, x++){
            if(x == 2){
                price = price.Insert(i, ",");
                i++;
                x=-2;
            }
        }
        return price;
    }
}

@foreach (Product item in ViewBag.Products)
{
    <div class="grid__column-TwoOfTen productList__item">
        <div class="productList__item-img" style="background-image: url(/images/products/@item.ImageUrl);">
            <div class="productList__item-addToCartbtn">
                <input class="hiddenProductId" type="hidden" value=@item.ProductId>
                Add to cart
            </div>
        </div>
        <div class="productList__item-name">
            <span>@item.ProductName</span>
        </div>
        
        <div class="productList__item-Price">
            @{
                if(item.Price != item.DiscountPrice && item.DiscountPrice != 0){
                    <div class="productList__item-Newprice">
                        @{
                            string Price = normalizePrice(item.DiscountPrice.ToString());
                        }
                        <span>@Price₫</span>
                    </div>
                    <div class="productList__item-Oldprice">
                        @{
                            string OldPrice = normalizePrice(item.Price.ToString());
                        }
                        <span>@OldPrice₫</span>
                    </div>
                    float discountPercent = (item.Price - item.DiscountPrice) / (item.Price/100);
                    <div class="productList__item-SaleOf">
                            <span style="line-height: 20px;" >GIẢM</span><br>
                            <span>@discountPercent%</span>
                    </div>
                }
                else{
                    <div class="productList__item-Newprice">
                        @{
                            string Price = normalizePrice(item.Price.ToString());
                        }
                        <span>@Price₫</span>
                    </div>
                }
            }
        </div>
    </div>
}

<script>
    @* Check if user is logged in or not, if not, make them login to continue proceed  *@
    function MakeUserLogin(){
        console.log("Bat nguoi dung dang nhap")
        alert("Vui lòng đăng nhập để thêm sản phẩm vào giỏ hàng")
        var loginModal = document.querySelector('.login__modal')
        loginModal.classList.add('modal-active')
    }

    @* Handling when user click on button Add to cart at some productItem in productList  *@
    let addToCartBtns = document.querySelectorAll('.productList__item-addToCartbtn')
    for(let i = 0; i<addToCartBtns.length; i++){
        addToCartBtns[i].addEventListener('click', function(e){
            e.stopPropagation()
            if(@Html.Raw(Json.Serialize(@User.Identity.IsAuthenticated)) == false){
                MakeUserLogin()
            }
            else{
                let productId = addToCartBtns[i].querySelector('.hiddenProductId').value;
                let request = new XMLHttpRequest();
                request.open("POST", `/cart/add/${productId}`, true)
                request.onreadystatechange = function() {
                    if (this.readyState == 4 && this.status == 200) {
                        document.querySelector('.barWithSearch__cart-numofProd').textContent = this.responseText
                    }
                }
                request.send()
            }
        })
    }

    @* Handling when a user click on a product to navigate to that product detail page  *@
    let productElements = document.querySelectorAll('.productList__item');
    for(let i = 0; i < productElements.length; i++){
        productElements[i].addEventListener('click', function(e){
            let productId = productElements[i].querySelector('.hiddenProductId').value;
            window.location.href = `/home/productdetail/${productId}`;
        })
    }
</script>